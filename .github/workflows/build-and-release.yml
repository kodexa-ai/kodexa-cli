name: Kodexa CLI Python Package

on:
  push:
    paths:
      - '**'
      - '!docs/**'
      - '!.github/**'

jobs:
  build-and-release:
    name: Build, Package & Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Run image
        uses: abatilo/actions-poetry@v2
      - name: Increment version
        id: version
        run: |
          # Your existing version increment logic here
          # ...
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "versionType=Release" >> $GITHUB_OUTPUT
          poetry version $NEW_VERSION --no-ansi
      - name: Install dependencies
        run: poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          yes | poetry run mypy --install-types kodexa_cli || true
      - name: Test with pytest
        run: |
          poetry run pytest
      - name: Build Package
        run: |
          poetry build
      - name: Publish a Python distribution to PyPI
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.version.outputs.version }}
          title: Release ${{ steps.version.outputs.version }}

  build-executables:
    needs: build-and-release
    name: Build ${{ matrix.os }} Executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: kodexa-cli-linux
            asset_name: kodexa-cli-linux
          - os: macos-latest
            artifact_name: kodexa-cli-mac
            asset_name: kodexa-cli-mac
          - os: windows-latest
            artifact_name: kodexa-cli-windows.exe
            asset_name: kodexa-cli-windows.exe
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Run image
        uses: abatilo/actions-poetry@v2
      - name: Install dependencies
        run: poetry install
      - name: Build executable
        run: |
          poetry run pyinstaller kodexa-cli.spec
      - name: Rename artifact
        run: |
          mv dist/kodexa-cli* dist/${{ matrix.artifact_name }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-and-release.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream